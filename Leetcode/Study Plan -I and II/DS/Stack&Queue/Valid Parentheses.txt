Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true


Solution:

class Solution {
    public boolean isValid(String s) {
        
        Stack<Character> st = new Stack<Character>();
        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
            System.out.println(c);
            if(c=='(' || c=='[' || c=='{')
             st.push(c);
            else if(c==')'){
                if(st.isEmpty() || st.pop()!='(')
                    return false;
            }
            else if(c==']'){
                if(st.isEmpty() || st.pop()!='[')
                    return false;
            }
            else if(c=='}'){
                if(st.isEmpty() || st.pop()!='{')
                    return false;
            }
        }
        
        return st.isEmpty();
    }
}