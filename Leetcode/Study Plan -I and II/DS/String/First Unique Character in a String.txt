Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1


Solution:

Short:

class Solution {
    public int firstUniqChar(String s) {
        
         int freq[] = new int[26];
           for(char i: s.toCharArray()) freq[i-'a']++;
           for(int i = 0; i < s.length(); i++) if(freq[s.charAt(i)-'a'] == 1) return i;
           return -1;
        
    }
}

================================================================

class Solution {
    public int firstUniqChar(String s) {
        
        char arr[] = s.toCharArray();
        
        
        for(int i=0;i<arr.length;i++){
            if(arr[i] != ' '){
             int flag = 0;
                for(int j=i+1;j<arr.length;j++){
                    if(arr[i] == arr[j]){
                        flag = 1;
                        arr[j] = ' ';
                    }
                }
                if(flag ==0) return i;   
            }
        }
        return -1;
        
    }
}