Given two strings s and t, return true if t is an anagram of s, and false otherwise.

 

Example 1:

Input: s = "anagram", t = "nagaram"
Output: true
Example 2:

Input: s = "rat", t = "car"
Output: false

Solution:

Short(Using Hashap):


/**
 * Time Complexity: O(N)
 *
 * Space Complexity: O(N)
 *
 * N = Length of input string S or T.
 */
class Solution {
    public boolean isAnagram(String s, String t) {
        if (s == null || t == null || s.length() != t.length()) {
            return false;
        }

        int len = s.length();
        // Finding the count of each character in string S
        HashMap<Character, Integer> countMap = new HashMap<>();
        for (int i = 0; i < len; i++) {
            char c = s.charAt(i);
            countMap.put(c, countMap.getOrDefault(c, 0) + 1);
        }

        // Subtracting the count for each character in string T.
        // If an extra char is found, we can return false.
        for (int i = 0; i < len; i++) {
            char c = t.charAt(i);
            Integer count = countMap.get(c);
            if (count == null) {
                return false;
            }
            if (count.equals(1)) {
                countMap.remove(c);
            } else {
                countMap.put(c, count - 1);
            }
        }

        return true;
    }
}

===============================================

 if(s.length() != t.length()) return false;
        char arr1[] = s.toCharArray();
        char arr2[] = t.toCharArray();
       
        int flag = 0;
        for(int i=0; i<arr1.length; i++){
            if(arr1[i] != ' '){
                flag++;
                for(int j=i+1;j<arr1.length;j++){
                    if(arr1[i] == arr1[j]){
                        flag++;
                        arr1[j] = ' ';
                    }
                }
                for(int k=0;k<arr2.length;k++){
                    
                     if(arr1[i] == arr2[k]){
                        flag--;
                    }
                }
                if(flag != 0) return false;
                
            }
            flag =0;
        }
        return true;