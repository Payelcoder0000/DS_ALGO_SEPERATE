Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

Example 2:

Input: numRows = 1
Output: [[1]]

Solution:

class Solution {
    public List<List<Integer>> generate(int numRows) {
      List<List<Integer>> list= new ArrayList<>();
	        for(int i=1;i<=numRows;i++){
	            
	            List<Integer> list1 = new ArrayList<Integer>();
	            List<Integer> prevRow = new ArrayList<Integer>();
	            list1.add(1);
	            if(numRows != 1 && i!=1) {
		            for(int j=1;j<=i-2;j++){
		            	prevRow = list.get(i-1-1);
		                list1.add(prevRow.get(j-1)+ prevRow.get(j));
		            }
		            list1.add(1);
	            }
	            
	            list.add(list1);
	        }
	        return list;
    }
}