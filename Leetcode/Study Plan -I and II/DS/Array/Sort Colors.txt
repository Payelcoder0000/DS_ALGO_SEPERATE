Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]

Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]

Example 3:

Input: nums = [0]
Output: [0]

Example 4:

Input: nums = [1]
Output: [1]

Solution:

(Quick Sort)

class Solution {
    public void sortColors(int[] nums) {
        
        int n= nums.length;
        
        sort(nums, 0, n-1);
    }
    
   private void sort(int[] arr, int p, int r) {
		// TODO Auto-generated method stub
		if(p < r) {
			int value = partition(arr,p,r);
			sort(arr,p,value-1);
			sort(arr,value+1,r);
		}
		
	}

	private int partition(int[] arr, int p, int r) {
		// TODO Auto-generated method stub
		int x = arr[r];
		int i = p-1;
		for(int j=p;j<=r-1;j++) {
			if(arr[j] < x) {
				i = i+1;
				int temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
		int temp = arr[i+1];
		arr[i+1] = arr[r];
		arr[r] = temp;
		return i+1;
	}
}